networks:
  default:
    name: app-network
services:
  # Backend API service (animator)
  animator:
    build:
      context: ./animator
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - PORT=8080
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - GCS_BUCKET_NAME=${GCS_BUCKET_NAME}
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      # Use the specific service account key path
      - GOOGLE_APPLICATION_CREDENTIALS=/app/animator-sa-key.json
    volumes:
      # Mount the specific service account key
      - ./animator-sa-key.json:/app/animator-sa-key.json:ro
    networks:
      - default

  # Agent service (LangGraph-based)
  agent:
    build:
      context: ./agent
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - PORT=8081
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      - BLENDER_SERVICE_URL=http://localhost:8080
      - VERTEX_AI_LOCATION=${VERTEX_AI_LOCATION:-us-central1}
      # Use the specific service account key path
      - GOOGLE_APPLICATION_CREDENTIALS=/app/animator-sa-key.json
    volumes:
      # Mount the specific service account key
      - ./animator-sa-key.json:/app/animator-sa-key.json:ro
    depends_on:
      - animator
    networks:
      - default

  # Frontend web app
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:8080" # Map container port 8080 to host port 3000
    environment:
      - PORT=8080
      - AGENT_SERVICE_URL=http://locatlhost:8081
      - NEXT_PUBLIC_AGENT_SERVICE_URL=http://localhost:8081 # For client-side code
      - GOOGLE_CLOUD_PROJECT=${GOOGLE_CLOUD_PROJECT}
      # Use the same service account key path for frontend
      - GOOGLE_APPLICATION_CREDENTIALS=/app/animator-sa-key.json
    volumes:
      # Mount the specific service account key
      - ./animator-sa-key.json:/app/animator-sa-key.json:ro
    depends_on:
      - agent
    networks:
      - default
